@model Library_Mangement_Website.Sach_copy
<link rel="stylesheet" href="~/Content/myCSS/styles.css">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.10.377/pdf.min.js"></script>
<style>
    .row {
        margin-right: 15px;
        margin-left: 15px;
    }

    .list {
        padding: 20px;
        background-color: #f9f9f9;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

        .list h2 {
            margin-bottom: 20px;
            font-size: 24px;
            color: #333;
        }

        .list ul {
            list-style-type: none;
            padding: 0;
        }

            .list ul li {
                padding: 10px;
                border-bottom: 1px solid #ddd;
                transition: background-color 0.3s ease;
            }

                .list ul li:hover {
                    background-color: #f1f1f1;
                }

                .list ul li a {
                    text-decoration: none;
                    background-color: #007BFF;
                    font-weight: bold;
                }

                    .list ul li a:hover {
                        text-decoration: underline;
                    }

                .list ul li .description {
                    font-size: 14px;
                    color: #555;
                }

                .list ul li .date {
                    font-size: 12px;
                    color: #999;
                }

                .list ul li .actions {
                    margin-top: 10px;
                }

                    .list ul li .actions a {
                        margin-right: 10px;
                        color: white;
                        text-decoration: none;
                    }

                    .list ul li .actions button {
                        padding: 10px 20px;
                        border: none;
                        background-color: #007BFF;
                        color: white;
                        cursor: pointer;
                        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                        font-weight: bold;
                    }

                        .list ul li .actions button:hover {
                            background-color: #0056b3;
                        }

                        .list ul li .actions button:disabled {
                            background-color: #ccc;
                            cursor: not-allowed;
                        }

    .btn-primary {
        padding: 8px 16px;
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
    }

    .content-grid {
        display: grid;
        width: 100%;
        gap: 20px;
        margin-top: 20px;
        margin-bottom: 20px;
    }

    .stats-card {
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        text-align: center;
        margin: 15px;
    }

        .stats-card h3 {
            margin: 0 0 10px;
            font-size: 18px;
            color: #333;
        }

        .stats-card p {
            margin: 0;
            font-size: 24px;
            font-weight: bold;
            color: #007BFF;
        }

    #pdf-viewer {
        width: 100%;
        max-width: 600px;
        height: 800px;
        border: 3px solid #ddd;
        border-radius: 8px;
        margin-top: 20px;
        display: none;
    }

    #pdf-error {
        color: #d9534f;
        margin-top: 10px;
        display: none;
    }

    #pdf-navigation {
        margin-top: 10px;
        text-align: center;
    }

    #pdf-navigation button {
        padding: 8px 16px;
        margin: 0 5px;
        border: none;
        border-radius: 4px;
        background-color: #007BFF;
        color: #fff;
        cursor: pointer;
    }

    #pdf-navigation button:disabled {
        background-color: #ccc;
        cursor: not-allowed;
    }

    #pdf-page-info {
        margin-top: 10px;
        font-size: 14px;
        color: #333;
    }
</style>

    @if (!string.IsNullOrEmpty(Model.pdf_link))
    {
        <a class="btn btn-primary" href="@Model.pdf_link" download>Tải sách</a>
        <button class="btn btn-primary" onclick="loadPDF('@Model.pdf_link')">Đọc sách</button>
        <div id="pdf-viewer">
            <canvas id="pdf-canvas"></canvas>
            <div id="pdf-navigation">
                <button id="prev-page" onclick="changePage(-1)">Previous</button>
                <button id="next-page" onclick="changePage(1)">Next</button>
            </div>
            <p id="pdf-page-info"></p>
        </div>
        <p id="pdf-error">Không thể tải PDF. Vui lòng thử tải xuống hoặc kiểm tra liên kết.</p>
    }
    else
    {
        <p>Không có liên kết PDF để đọc hoặc tải sách.</p>
    }
<script>
    pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.10.377/pdf.worker.min.js';

    let pdfDoc = null;
    let currentPage = 1;
    let totalPages = 0;

    async function loadPDF(pdfUrl) {
        try {
            console.log('Loading PDF:', pdfUrl);
            const pdfViewer = document.getElementById('pdf-viewer');
            const pdfError = document.getElementById('pdf-error');
            const canvas = document.getElementById('pdf-canvas');
            const context = canvas.getContext('2d');
            const pageInfo = document.getElementById('pdf-page-info');
            const prevButton = document.getElementById('prev-page');
            const nextButton = document.getElementById('next-page');

            pdfViewer.style.display = 'block';
            pdfError.style.display = 'none';

            //Load the PDF
            pdfDoc = await pdfjsLib.getDocument(pdfUrl).promise;
            totalPages = pdfDoc.numPages;
            currentPage = 1; // Reset to first page

            //Render
            await renderPage(currentPage);

            pageInfo.textContent = `Page ${currentPage} of ${totalPages}`;

            prevButton.disabled = currentPage <= 1;
            nextButton.disabled = currentPage >= totalPages;
        } catch (error) {
            console.error('Error loading PDF:', error.message);
            document.getElementById('pdf-viewer').style.display = 'none';
            document.getElementById('pdf-error').style.display = 'block';
        }
    }

    async function renderPage(pageNum) {
        const canvas = document.getElementById('pdf-canvas');
        const context = canvas.getContext('2d');
        const pageInfo = document.getElementById('pdf-page-info');
        const prevButton = document.getElementById('prev-page');
        const nextButton = document.getElementById('next-page');

        const page = await pdfDoc.getPage(pageNum);
        const viewport = page.getViewport({ scale: 1.0 });
        canvas.height = viewport.height;
        canvas.width = viewport.width;

        const renderContext = {
            canvasContext: context,
            viewport: viewport
        };
        await page.render(renderContext).promise;

        pageInfo.textContent = `Page ${pageNum} of ${totalPages}`;
        prevButton.disabled = pageNum <= 1;
        nextButton.disabled = pageNum >= totalPages;
    }

    function changePage(offset) {
        currentPage += offset;
        if (currentPage < 1) currentPage = 1;
        if (currentPage > totalPages) currentPage = totalPages;
        renderPage(currentPage);
    }
</script>

