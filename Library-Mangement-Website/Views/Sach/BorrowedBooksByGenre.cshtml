@model IEnumerable<Library_Mangement_Website.Models.GenreBorrowedModel>
@{
    ViewBag.Title = "Báo cáo sách mượn theo thể loại";
    Layout = "~/Views/Shared/_LayoutHomeMain.cshtml";
    var currentDateTime = DateTime.Now;
}
<!DOCTYPE html>
<html lang="vi">
<head>
    <title>@ViewBag.Title</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <div id="books">
        <div>
            <div>
                <h2>Báo cáo</h2>
                <p>Thống kê sách được trả theo thể loại trong tháng @currentDateTime.ToString("MM/yyyy")</p>
                <small>Cập nhật lần cuối: @currentDateTime.ToString("hh:mm tt dd/MM/yyyy")</small>
            </div>
        </div>

        <!-- Doughnut Chart -->
        <div class="card">
            <div class="card-content">
                <h3>Phân bố sách mượn theo thể loại</h3>
                <canvas id="genreChart" style="max-height: 300px;"></canvas>
            </div>
        </div>

        <!-- Filters -->
        <div class="card">
            <div class="card-content">
                <div class="filters">
                    @using (Html.BeginForm("BorrowedBooksByGenre", "Sach", FormMethod.Get))
                    {
                        <div class="search-filter">
                            <a href="@Url.Action("ExportToExcelBorrowedBooksByGenre", "Sach", new { searchTerm = ViewBag.SearchTerm })" class="btn btn-primary" style="padding: 5px; margin: 6px">Export to Excel</a>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Books Table -->
        <div class="card">
            <div class="card-header">
                <h3>Thống kê sách được trả theo thể loại trong tháng</h3>
            </div>
            <div class="card-content">
                <div class="table-container">
                    <table class="data-table" id="booksTable">
                        <thead>
                            <tr>
                                <th>Genre</th>
                                <th>Total Borrowed</th>
                                <th>Percentage (%)</th>
                            </tr>
                        </thead>
                        <tbody>

                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td><span class="badge badge-outline">@Html.DisplayFor(modelItem => item.Genre)</span></td>
                                    <td>@Html.DisplayFor(modelItem => item.BorrowedCopies)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Percentage, "{0:F2}")</td>
                                    
                                </tr>
                                
                            }
                        </tbody>
                    </table>
                    @if (!Model.Any())
                    {
                        <p>Không có sách nào được mượn trong tháng này.</p>
                    }
                <p>Total borrowed copies in this month: @ViewBag.TotalBorrowedCopies</p>
                </div>
            </div>
        </div>
    </div>

    <script src="~/Scripts/script.js"></script>
    <script>
        // Chart.js
        document.addEventListener('DOMContentLoaded', function () {
            var ctx = document.getElementById('genreChart').getContext('2d');
            var genreData = @Html.Raw(Json.Encode(ViewBag.GenreData));
            var chart = new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: genreData.map(item => item.Genre),
                    datasets: [{
                        label: 'Percentage of Borrowed Books',
                        data: genreData.map(item => item.Percentage),
                        backgroundColor: [
                            '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF',
                            '#FF9F40', '#C9CB3F', '#66BB6A', '#EF5350', '#26A69A'
                        ],
                        borderColor: '#fff',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'top'
                        },
                        tooltip: {
                            callbacks: {
                                label: function (context) {
                                    return context.label + ': ' + context.raw.toFixed(2) + '%';
                                }
                            }
                        }
                    }
                }
            });
        });
    </script>
</body>
</html>


